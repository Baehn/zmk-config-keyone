// Copyright (c) 2022 The ZMK Contributors
// SPDX-License-Identifier: MIT

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include "keys_de.h"

#define DEFAULT 0
#define QWER    1
#define SYML    2
#define NONE    3

/ {
    behaviors {
        ht: hold_tap {
            label = "hold_tap";
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <220>;
            quick-tap-ms = <150>;
            global-quick-tap;
            bindings = <&kp>, <&kp>;
        };
        slbs: slash_backslash {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp _SLSH>, <&kp _BSLH>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        under: under_minus {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp _UNDR>, <&kp _MINUS>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
    };
    combos {
        compatible = "zmk,combos";
        combo_toqwer {
            timeout-ms = <50>;
            key-positions = <1 2>;
            bindings = <&tog 3>;
        };
        combo_todef {
            timeout-ms = <50>;
            key-positions = <10 11 12 13>;
            bindings = <&bt BT_CLR>;
        };
        combo_bootloader {
            timeout-ms = <50>;
            key-positions = <1 2 3 4>;
            bindings = <&bootloader>;
        };
        combo_bluetooth_toggle {
            timeout-ms = <50>;
            key-positions = <3 4>;
            bindings = <&out OUT_TOG>;
        };

        combo_esc {
            timeout-ms = <50>;
            key-positions = <12 13>;
            bindings = <&kp ESC>;
            layers = <1>;
        };



        combo_1 {
            timeout-ms = <50>;
            key-positions = <0 1>;
            bindings = <&kp A>;
        };


        combo_2 {
            timeout-ms = <50>;
            key-positions = <0 2>;
            bindings = <&kp B>;
        };


        combo_3 {
            timeout-ms = <50>;
            key-positions = <0 3>;
            bindings = <&kp C>;
        };


        combo_4 {
            timeout-ms = <50>;
            key-positions = <0 4>;
            bindings = <&kp D>;
        };


        combo_5 {
            timeout-ms = <50>;
            key-positions = <0 5>;
            bindings = <&kp E>;
        };


        combo_6 {
            timeout-ms = <50>;
            key-positions = <0 6>;
            bindings = <&kp F>;
        };


        combo_7 {
            timeout-ms = <50>;
            key-positions = <0 7>;
            bindings = <&kp G>;
        };


        combo_8 {
            timeout-ms = <50>;
            key-positions = <0 8>;
            bindings = <&kp H>;
        };


        combo_9 {
            timeout-ms = <50>;
            key-positions = <0 9>;
            bindings = <&kp I>;
        };


        combo_10 {
            timeout-ms = <50>;
            key-positions = <0 10>;
            bindings = <&kp J>;
        };


        combo_11 {
            timeout-ms = <50>;
            key-positions = <0 11>;
            bindings = <&kp K>;
        };


        combo_12 {
            timeout-ms = <50>;
            key-positions = <0 12>;
            bindings = <&kp L>;
        };


        combo_13 {
            timeout-ms = <50>;
            key-positions = <0 13>;
            bindings = <&kp M>;
        };


        combo_14 {
            timeout-ms = <50>;
            key-positions = <0 14>;
            bindings = <&kp N>;
        };


        combo_15 {
            timeout-ms = <50>;
            key-positions = <0 15>;
            bindings = <&kp O>;
        };


        combo_16 {
            timeout-ms = <50>;
            key-positions = <0 16>;
            bindings = <&kp P>;
        };


        combo_17 {
            timeout-ms = <50>;
            key-positions = <0 17>;
            bindings = <&kp Q>;
        };


        combo_18 {
            timeout-ms = <50>;
            key-positions = <0 18>;
            bindings = <&kp R>;
        };


        combo_19 {
            timeout-ms = <50>;
            key-positions = <0 19>;
            bindings = <&kp S>;
        };


        combo_20 {
            timeout-ms = <50>;
            key-positions = <0 20>;
            bindings = <&kp T>;
        };


        combo_21 {
            timeout-ms = <50>;
            key-positions = <0 21>;
            bindings = <&kp U>;
        };


        combo_22 {
            timeout-ms = <50>;
            key-positions = <0 22>;
            bindings = <&kp V>;
        };


        combo_23 {
            timeout-ms = <50>;
            key-positions = <0 23>;
            bindings = <&kp W>;
        };


        combo_24 {
            timeout-ms = <50>;
            key-positions = <0 24>;
            bindings = <&kp X>;
        };


        combo_25 {
            timeout-ms = <50>;
            key-positions = <0 25>;
            bindings = <&kp Y>;
        };


        combo_26 {
            timeout-ms = <50>;
            key-positions = <0 26>;
            bindings = <&kp Z>;
        };


        combo_27 {
            timeout-ms = <50>;
            key-positions = <0 27>;
            bindings = <&kp A>;
        };


        combo_28 {
            timeout-ms = <50>;
            key-positions = <0 28>;
            bindings = <&kp B>;
        };


        combo_29 {
            timeout-ms = <50>;
            key-positions = <0 29>;
            bindings = <&kp C>;
        };


        combo_30 {
            timeout-ms = <50>;
            key-positions = <0 30>;
            bindings = <&kp D>;
        };


        combo_31 {
            timeout-ms = <50>;
            key-positions = <0 31>;
            bindings = <&kp E>;
        };


    };
    keymap {
        compatible = "zmk,keymap";
        default_layer {
            bindings = <
        //╭──────────┬──────────┬──────────┬──────────┬──────────╮   ╭──────────┬──────────┬──────────┬──────────┬──────────╮
        //│  Q       │  W       │  E       │  R       │  T       │   │  Z       │  U       │  I       │  O       │  P       │
            &kp Q      &kp W      &kp E      &kp R      &kp T          &kp Z      &kp U      &kp I      &kp O      &kp P
        //├──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┤
        //│  A       │  S       │  D       │  F       │  G       │   │  H       │  J       │  K       │  L       │ '        │
            &kp A       &kp S      &kp D      &kp F      &kp G          &kp H      &kp J      &kp K      &kp L     &kp SQT
        //├──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┤
        //│  Y       │  X       │  C       │  V       │  B       │   │  N       │  M       │ ,        │ .        │ /        │
            &kp Y      &kp X      &kp C      &kp V      &kp B          &kp N      &kp M      &kp COMMA  &kp DOT    &kp FSLH
        //╰──────────┴──────────┴──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┴──────────┴──────────╯
                                             &kp TAB    &kp ENTER      &kp SPACE  &kp BSPC
        //                                 ╰──────────┴──────────╯   ╰──────────┴──────────╯
            >;
        };
        qwertz_layer {
            bindings = <
        //╭──────────┬──────────┬──────────┬──────────┬──────────╮   ╭──────────┬──────────┬──────────┬──────────┬──────────╮
        //│  Q       │  W       │  E       │  R       │  T       │   │  Z       │  U       │  I       │  O       │  /       │
            &kp Q      &kp W      &kp E      &kp R      &kp T          &kp _Z     &kp U      &kp I      &kp O      &slbs 
        //├──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┤
        //│  A       │  S       │  D       │  F       │  G       │   │  H       │  J       │  K       │  L       │ P        │
          &ht LSHIFT A  &kp S      &kp D      &kp F      &kp G          &kp H      &kp J      &kp K      &kp L     &kp P 
        //├──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┤
        //│  Y       │  X       │  C       │  V       │  B       │   │  N       │  M       │ ,        │ .        │ _        │
            &kp _Y      &kp X      &kp C   &ht LCTRL V   &kp B          &kp N      &kp M     &kp _COMA  &kp _DOT   &under
        //╰──────────┴──────────┴──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┴──────────┴──────────╯
                                             &kp TAB    &kp ENTER      &kp SPACE  &kp SPACE
        //                                 ╰──────────┴──────────╯   ╰──────────┴──────────╯
            >;
        };
        symbols_left {
            bindings = <
        //╭──────────┬──────────┬──────────┬──────────┬──────────╮   ╭──────────┬──────────┬──────────┬──────────┬──────────╮
        //│          │          │          │          │          │   │  Z       │  U       │  I       │  O       │  /       │
            &trans      &trans     &trans     &trans     &trans         &kp _Z     &kp U      &kp I      &kp O      &kp _SLSH 
        //├──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┤
        //│  <       │  [       │  {       │  (       │  ^       │   │  H       │  J       │  K       │  L       │ P        │
            &kp _LT     &kp _LBKT  &kp _LBRC  &kp _LPAR  &kp _CAET      &kp H      &kp J      &kp K      &kp L     &kp P 
        //├──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┤
        //│  >       │  ]       │  }       │  )       │  #       │   │  N       │  M       │ ,        │ .        │ _        │
            &kp _GT     &kp _RBKT  &kp _RBRC  &mt _RPAR  _HASH          &kp N      &kp M     &kp _COMA  &kp _DOT   &kp _UNDR
        //╰──────────┴──────────┴──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┴──────────┴──────────╯
                                             &trans     &trans         &kp SPACE  &kp SPACE
        //                                 ╰──────────┴──────────╯   ╰──────────┴──────────╯
            >;
        };
        none_layer {
            bindings = <
        //╭──────────┬──────────┬──────────┬──────────┬──────────╮   ╭──────────┬──────────┬──────────┬──────────┬──────────╮
        //│  Q       │  W       │  E       │  R       │  T       │   │  Z       │  U       │  I       │  O       │  /       │
            &none       &none      &none      &none      &none          &kp _Z     &kp U      &kp I      &kp O      &slbs 
        //├──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┤
        //│  A       │  S       │  D       │  F       │  G       │   │  H       │  J       │  K       │  L       │ P        │
            &none       &none      &none      &none      &none          &kp H      &kp J      &kp K      &kp L     &kp P 
        //├──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┤
        //│  Y       │  X       │  C       │  V       │  B       │   │  N       │  M       │ ,        │ .        │ _        │
            &none       &none      &none      &none      &none          &kp N      &kp M     &kp _COMA  &kp _DOT   &under
        //╰──────────┴──────────┴──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┴──────────┴──────────╯
                                              &none      &none          &kp SPACE  &kp SPACE
        //                                 ╰──────────┴──────────╯   ╰──────────┴──────────╯
            >;
        };
    };
};
